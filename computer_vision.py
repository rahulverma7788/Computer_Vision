# -*- coding: utf-8 -*-
"""computer vision.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OjHoovImmkFH3u4r_v7iuZ0fIcijwmBJ
"""

import cv2
import numpy as np
from google.colab.patches import cv2_imshow

#input = cv2.imread('IMG_1596.JPG')
#cv2.imshow('Hello World', input)
import cv2
img = cv2.imread('Modi.jpg', cv2.IMREAD_UNCHANGED)
cv2_imshow(img)
cv2.waitKey()

import numpy as np

print(img.shape)

face_classifier = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
eye_classifier = cv2.CascadeClassifier('haarcascade_eye.xml')

image = cv2.imread('Modi.jpg')
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

faces = face_classifier.detectMultiScale(gray, 1.3, 5)

if faces is ():
  print('No faces found')

for (x,y,w,h) in faces:
  cv2.rectangle(image, (x,y), (x+w, y+h), (127,0,255), 2)
  cv2_imshow(image)

if faces is ():
  print('NO Face Found')

for (x,y,w,h) in faces:
  cv2.rectangle(image,(x,y),(x+w,x+h),(127,0,255),2)
  cv2_imshow(image)
  roi_gray = gray[y:y+h, x:x+w]
  roi_color = image[y:y+h, x:x+w]
  eyes = eye_classifier.detectMultiScale(roi_gray)
  for (ex,ey,ew,eh) in eyes:
    cv2.rectangle(roi_color,(ex,ey),(ex+ew+ey+eh),(255,255,0),2)
    cv2_imshow(image)

